spring.application.name=API-Gateway-Veterinaria
server.port=8200

#CONFIGURACION DE EUREKA CLIENT
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.instance.hostname=localhost
eureka.client.service-url.defaultZone=http://localhost:9100/eureka

# Ajustar tiempos de heartbeat para evitar problemas de registro
eureka.instance.lease-renewal-interval-in-seconds=10
eureka.instance.lease-expiration-duration-in-seconds=30

#CONFIGURACION DE LOS MICROSERVICIOS QUE CONTROLARA API-GATEWAY

#MICROSERVICIO CLIENTES
#http://localhost:8201/clientes
spring.cloud.gateway.mvc.routes[0].id=CLIENTES
spring.cloud.gateway.mvc.routes[0].uri=http://localhost:8201
spring.cloud.gateway.mvc.routes[0].predicates[0]=Path=/clientes/**

#MICROSERVICIO MASCOTAS
#http://localhost:8202/mascotas
spring.cloud.gateway.mvc.routes[1].id=MASCOTAS
spring.cloud.gateway.mvc.routes[1].uri=http://localhost:8202
spring.cloud.gateway.mvc.routes[1].predicates[0]=Path=/mascotas/**

#MICROSERVICIO RESPONSABLES
#http://localhost:8203/responsables
spring.cloud.gateway.mvc.routes[2].id=RESPONSABLES
spring.cloud.gateway.mvc.routes[2].uri=http://localhost:8203
spring.cloud.gateway.mvc.routes[2].predicates[0]=Path=/responsables/**


#MICROSERVICIO VETERINARIAS
#http://localhost:8205/veterinarias
spring.cloud.gateway.mvc.routes[3].id=GESTION-VETERINARIA
spring.cloud.gateway.mvc.routes[3].uri=http://localhost:8204
spring.cloud.gateway.mvc.routes[3].predicates[0]=Path=/gestion/**